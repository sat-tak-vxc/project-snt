<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>56.0</apiVersion>
    <assignments>
        <name>assign_AlertMessage2</name>
        <label>アラートメッセージに割りあて</label>
        <locationX>1263</locationX>
        <locationY>3649</locationY>
        <assignmentItems>
            <assignToReference>var_AlertMessage</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>text_AlertMessageDesiredPreviewDate</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>loop_OperationCheckMaster</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>assign_Collection</name>
        <label>コレクションに追加</label>
        <locationX>1398</locationX>
        <locationY>954</locationY>
        <assignmentItems>
            <assignToReference>varCol_OperationCheckMaster</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>loop_DecisionOperationCheckMaster</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>loop_DecisionOperationCheckMaster</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>assign_ErrorMessageArea</name>
        <label>エラーメッセージに割りあて</label>
        <locationX>441</locationX>
        <locationY>3823</locationY>
        <assignmentItems>
            <assignToReference>var_ErrorMessage</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>text_ErrorMessageArea</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>loop_OperationCheckMaster</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>assign_ErrorMessageDesiredMoveDate</name>
        <label>エラーメッセージに割りあて</label>
        <locationX>2018</locationX>
        <locationY>2844</locationY>
        <assignmentItems>
            <assignToReference>var_AlertMessage</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>text_AlertMessageDesiredMoveDate</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>loop_OperationCheckMaster</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>assign_ErrorMessageFloorPlan</name>
        <label>エラーメッセージに割りあて</label>
        <locationX>631</locationX>
        <locationY>3815</locationY>
        <assignmentItems>
            <assignToReference>var_ErrorMessage</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>text_ErrorMessageFloorPlan</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>loop_OperationCheckMaster</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>assign_ErrorMessageRent</name>
        <label>エラーメッセージに割りあて</label>
        <locationX>852</locationX>
        <locationY>3794</locationY>
        <assignmentItems>
            <assignToReference>var_ErrorMessage</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>text_ErrorMessageRent</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>loop_OperationCheckMaster</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>assign_ErrorMessageTypeTerm</name>
        <label>エラーメッセージに割りあて</label>
        <locationX>1062</locationX>
        <locationY>3800</locationY>
        <assignmentItems>
            <assignToReference>var_ErrorMessage</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>text_ErrorMessageTypeTerms</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>loop_OperationCheckMaster</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>decision_Area</name>
        <label>面積判定</label>
        <locationX>438</locationX>
        <locationY>3681</locationY>
        <defaultConnector>
            <targetReference>assign_ErrorMessageArea</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>チェック結果NG</defaultConnectorLabel>
        <rules>
            <name>CheckOK_Area</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>get_ApplicationRecord.DesiredAreaTo__c</leftValueReference>
                <operator>LessThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>get_CorporateHousingRegulationPatternRecord.AreaUpperLimit__c</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>loop_OperationCheckMaster</targetReference>
            </connector>
            <label>チェック結果OK</label>
        </rules>
    </decisions>
    <decisions>
        <name>decision_AreaCheck</name>
        <label>面積チェック</label>
        <locationX>426</locationX>
        <locationY>3526</locationY>
        <defaultConnector>
            <targetReference>loop_OperationCheckMaster</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>チェックなし</defaultConnectorLabel>
        <rules>
            <name>IsAreaCheck</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>get_CorporateHousingRegulationPatternRecord.AreaUpperLimit__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>decision_Area</targetReference>
            </connector>
            <label>面積チェック</label>
        </rules>
    </decisions>
    <decisions>
        <name>decision_CorporateHousingRegulationPatternNullCheck1</name>
        <label>社宅規定パターンNullチェック</label>
        <locationX>842</locationX>
        <locationY>3371</locationY>
        <defaultConnector>
            <targetReference>decision_RentCheck</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>NotNull</defaultConnectorLabel>
        <rules>
            <name>IsNullCorporateHousingRegulationPatternRecord1</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>get_CorporateHousingRegulationPatternRecord</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>loop_OperationCheckMaster</targetReference>
            </connector>
            <label>Null</label>
        </rules>
    </decisions>
    <decisions>
        <name>decision_CorporateHousingRegulationPatternNullCheck2</name>
        <label>社宅規定パターンNullチェック</label>
        <locationX>629</locationX>
        <locationY>3383</locationY>
        <defaultConnector>
            <targetReference>decision_FloorPlanCheck</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>NotNull</defaultConnectorLabel>
        <rules>
            <name>IsNullCorporateHousingRegulationPatternRecord2</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>get_CorporateHousingRegulationPatternRecord</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>loop_OperationCheckMaster</targetReference>
            </connector>
            <label>Null</label>
        </rules>
    </decisions>
    <decisions>
        <name>decision_CorporateHousingRegulationPatternNullCheck3</name>
        <label>社宅規定パターンNullチェック</label>
        <locationX>430</locationX>
        <locationY>3381</locationY>
        <defaultConnector>
            <targetReference>decision_AreaCheck</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>NotNull</defaultConnectorLabel>
        <rules>
            <name>IsNullCorporateHousingRegulationPatternRecord3</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>get_CorporateHousingRegulationPatternRecord</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>loop_OperationCheckMaster</targetReference>
            </connector>
            <label>Null</label>
        </rules>
    </decisions>
    <decisions>
        <name>decision_DesiredArea</name>
        <label>希望エリアチェック</label>
        <locationX>990</locationX>
        <locationY>1368</locationY>
        <defaultConnector>
            <targetReference>get_CorporateHousingRegulationPatternRecord</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>チェックなし</defaultConnectorLabel>
        <rules>
            <name>IsCity</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>formula_City</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>formula_State</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>get_TargetDistrictCity</targetReference>
            </connector>
            <label>市区郡入力済み</label>
        </rules>
        <rules>
            <name>isState</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>formula_State</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>get_TargetDistrictAllCity</targetReference>
            </connector>
            <label>都道府県のみ</label>
        </rules>
    </decisions>
    <decisions>
        <name>decision_DesiredMoveDate_Join2</name>
        <label>入居希望日判定（入社）</label>
        <locationX>1624</locationX>
        <locationY>3015</locationY>
        <defaultConnector>
            <targetReference>assign_ErrorMessageDesiredMoveDate</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>チェック結果NG</defaultConnectorLabel>
        <rules>
            <name>CheckOK_Join2</name>
            <conditionLogic>((1 AND 2) OR 3) AND ((4 AND 5) OR 6)</conditionLogic>
            <conditions>
                <leftValueReference>get_ApplicationRecord.DesiredMoveDate1__c</leftValueReference>
                <operator>GreaterThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>formula_FromDateJoin</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_ApplicationRecord.DesiredMoveDate1__c</leftValueReference>
                <operator>LessThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>formula_ToDateJoin</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_ApplicationRecord.DesiredMoveDate1__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_ApplicationRecord.DesiredMoveDate2__c</leftValueReference>
                <operator>GreaterThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>formula_FromDateJoin</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_ApplicationRecord.DesiredMoveDate2__c</leftValueReference>
                <operator>LessThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>formula_ToDateJoin</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_ApplicationRecord.DesiredMoveDate2__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>loop_OperationCheckMaster</targetReference>
            </connector>
            <label>チェック結果OK</label>
        </rules>
    </decisions>
    <decisions>
        <name>decision_DesiredMoveDate_Marriage2</name>
        <label>入居希望日判定（結婚）</label>
        <locationX>1626</locationX>
        <locationY>2834</locationY>
        <defaultConnector>
            <targetReference>assign_ErrorMessageDesiredMoveDate</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>チェック結果NG</defaultConnectorLabel>
        <rules>
            <name>CheckOK_Marriage2</name>
            <conditionLogic>((1 AND 2) OR 3) AND ((4 AND 5) OR 6)</conditionLogic>
            <conditions>
                <leftValueReference>get_ApplicationRecord.DesiredMoveDate1__c</leftValueReference>
                <operator>GreaterThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>formula_FromDateMarriage</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_ApplicationRecord.DesiredMoveDate1__c</leftValueReference>
                <operator>LessThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>formula_ToDateMarriage</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_ApplicationRecord.DesiredMoveDate1__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_ApplicationRecord.DesiredMoveDate2__c</leftValueReference>
                <operator>GreaterThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>formula_FromDateMarriage</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_ApplicationRecord.DesiredMoveDate2__c</leftValueReference>
                <operator>LessThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>formula_ToDateMarriage</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_ApplicationRecord.DesiredMoveDate2__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>loop_OperationCheckMaster</targetReference>
            </connector>
            <label>チェック結果OK</label>
        </rules>
    </decisions>
    <decisions>
        <name>decision_DesiredMoveDate_Transfer2</name>
        <label>入居希望日判定（転勤）</label>
        <locationX>1624</locationX>
        <locationY>2701</locationY>
        <defaultConnector>
            <targetReference>assign_ErrorMessageDesiredMoveDate</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>チェック結果NG</defaultConnectorLabel>
        <rules>
            <name>CheckOK_Transfer2</name>
            <conditionLogic>((1 AND 2) OR 3) AND ((4 AND 5) OR 6)</conditionLogic>
            <conditions>
                <leftValueReference>get_ApplicationRecord.DesiredMoveDate1__c</leftValueReference>
                <operator>GreaterThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>formula_FromDateTransfer</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_ApplicationRecord.DesiredMoveDate1__c</leftValueReference>
                <operator>LessThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>formula_ToDateTransfer</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_ApplicationRecord.DesiredMoveDate1__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_ApplicationRecord.DesiredMoveDate2__c</leftValueReference>
                <operator>GreaterThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>formula_FromDateTransfer</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_ApplicationRecord.DesiredMoveDate2__c</leftValueReference>
                <operator>LessThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>formula_ToDateTransfer</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_ApplicationRecord.DesiredMoveDate2__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>loop_OperationCheckMaster</targetReference>
            </connector>
            <label>チェック結果OK</label>
        </rules>
    </decisions>
    <decisions>
        <name>decision_DesiredMoveDateCheck2</name>
        <label>入居希望日チェック</label>
        <locationX>1506</locationX>
        <locationY>2826</locationY>
        <defaultConnector>
            <targetReference>loop_OperationCheckMaster</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>入居希望日チェックなし</defaultConnectorLabel>
        <rules>
            <name>IsDesiredMoveDateCheck_Transfer2</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>formula_StandardDateTransfer</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>decision_DesiredMoveDate_Transfer2</targetReference>
            </connector>
            <label>入居希望日チェック（転勤）</label>
        </rules>
        <rules>
            <name>IsDesiredMoveDateCheck_Marriage2</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>formula_StandardDateMarriage</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>decision_DesiredMoveDate_Marriage2</targetReference>
            </connector>
            <label>入居希望日チェック（結婚）</label>
        </rules>
        <rules>
            <name>IsDesiredMoveDateCheck_Join2</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>formula_StandardDateJoin</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>decision_DesiredMoveDate_Join2</targetReference>
            </connector>
            <label>入居希望日チェック（入社）</label>
        </rules>
    </decisions>
    <decisions>
        <name>decision_DesiredPreviewDate</name>
        <label>下見希望日判定（転勤）</label>
        <locationX>1249</locationX>
        <locationY>3511</locationY>
        <defaultConnector>
            <targetReference>assign_AlertMessage2</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>チェック結果NG</defaultConnectorLabel>
        <rules>
            <name>CheckOK_DesiredPreviewDate</name>
            <conditionLogic>((1 AND 2) OR 3) AND ((4 AND 5) OR 6)</conditionLogic>
            <conditions>
                <leftValueReference>get_ApplicationRecord.DesiredPreviewDate1__c</leftValueReference>
                <operator>LessThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>formula_DesiredMoveDate1Before10Days</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_ApplicationRecord.DesiredPreviewDate1__c</leftValueReference>
                <operator>LessThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>formula_DesiredMoveDate2Before10Days</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_ApplicationRecord.DesiredPreviewDate1__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_ApplicationRecord.DesiredPreviewDate2__c</leftValueReference>
                <operator>LessThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>formula_DesiredMoveDate1Before10Days</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_ApplicationRecord.DesiredPreviewDate2__c</leftValueReference>
                <operator>LessThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>formula_DesiredMoveDate2Before10Days</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_ApplicationRecord.DesiredPreviewDate2__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>loop_OperationCheckMaster</targetReference>
            </connector>
            <label>チェック結果OK</label>
        </rules>
    </decisions>
    <decisions>
        <name>decision_DistrictMastertId</name>
        <label>地区マスタIDチェック</label>
        <locationX>825</locationX>
        <locationY>1608</locationY>
        <defaultConnector>
            <targetReference>get_DistrictMaster</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>NotNull</defaultConnectorLabel>
        <rules>
            <name>IsNullTargetDistrictId</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>var_DistrictMasterId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>get_TargetDistrictCityException</targetReference>
            </connector>
            <label>Null</label>
        </rules>
    </decisions>
    <decisions>
        <name>decision_ExceptionRecord</name>
        <label>除外レコードチェック</label>
        <locationX>671</locationX>
        <locationY>1848</locationY>
        <defaultConnector>
            <targetReference>get_DistrictMaster</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>NotNull</defaultConnectorLabel>
        <rules>
            <name>IsNullExceptionRecord</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>get_TargetDistrictCityException</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>get_TargetDistrictAllCity</targetReference>
            </connector>
            <label>Null</label>
        </rules>
    </decisions>
    <decisions>
        <name>decision_FloorPlan</name>
        <label>間取判定</label>
        <locationX>619</locationX>
        <locationY>3671</locationY>
        <defaultConnector>
            <targetReference>assign_ErrorMessageFloorPlan</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>チェック結果NG</defaultConnectorLabel>
        <rules>
            <name>CheckOK_FloorPlan</name>
            <conditionLogic>(1 OR 2) AND (3 OR 4) AND (5 OR 6) AND (7 OR 8) AND (9 OR 10) AND (11 OR 12) AND (13 OR 14) AND (15 OR 16) AND (17 OR 18) AND (19 OR 20)</conditionLogic>
            <conditions>
                <leftValueReference>get_CorporateHousingRegulationPatternRecord.FloorPlanRegulation1__c</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>get_ApplicationRecord.FloorPlan1__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_ApplicationRecord.FloorPlan1__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_CorporateHousingRegulationPatternRecord.FloorPlanRegulation1__c</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>get_ApplicationRecord.FloorPlan2__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_ApplicationRecord.FloorPlan2__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_CorporateHousingRegulationPatternRecord.FloorPlanRegulation1__c</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>get_ApplicationRecord.FloorPlan3__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_ApplicationRecord.FloorPlan3__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_CorporateHousingRegulationPatternRecord.FloorPlanRegulation1__c</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>get_ApplicationRecord.FloorPlan4__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_ApplicationRecord.FloorPlan4__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_CorporateHousingRegulationPatternRecord.FloorPlanRegulation1__c</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>get_ApplicationRecord.FloorPlan5__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_ApplicationRecord.FloorPlan5__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_CorporateHousingRegulationPatternRecord.FloorPlanRegulation1__c</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>get_ApplicationRecord.FloorPlan6__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_ApplicationRecord.FloorPlan6__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_CorporateHousingRegulationPatternRecord.FloorPlanRegulation1__c</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>get_ApplicationRecord.FloorPlan7__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_ApplicationRecord.FloorPlan7__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_CorporateHousingRegulationPatternRecord.FloorPlanRegulation1__c</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>get_ApplicationRecord.FloorPlan8__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_ApplicationRecord.FloorPlan8__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_CorporateHousingRegulationPatternRecord.FloorPlanRegulation1__c</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>get_ApplicationRecord.FloorPlan9__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_ApplicationRecord.FloorPlan9__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_CorporateHousingRegulationPatternRecord.FloorPlanRegulation1__c</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>get_ApplicationRecord.FloorPlan10__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_ApplicationRecord.FloorPlan10__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>loop_OperationCheckMaster</targetReference>
            </connector>
            <label>チェック結果OK</label>
        </rules>
    </decisions>
    <decisions>
        <name>decision_FloorPlanCheck</name>
        <label>間取チェック</label>
        <locationX>624</locationX>
        <locationY>3515</locationY>
        <defaultConnector>
            <targetReference>loop_OperationCheckMaster</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>チェックなし</defaultConnectorLabel>
        <rules>
            <name>IsFloorPlanCheck</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>get_CorporateHousingRegulationPatternRecord.FloorPlanRegulation1__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>decision_FloorPlan</targetReference>
            </connector>
            <label>間取チェック</label>
        </rules>
    </decisions>
    <decisions>
        <name>decision_RealEstateRequest</name>
        <label>物件情報提供依頼有無</label>
        <locationX>1245</locationX>
        <locationY>3342</locationY>
        <defaultConnector>
            <targetReference>loop_OperationCheckMaster</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>依頼なし</defaultConnectorLabel>
        <rules>
            <name>IsRequest</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>get_ApplicationRecord.MediationRequest__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>decision_DesiredPreviewDate</targetReference>
            </connector>
            <label>依頼あり</label>
        </rules>
    </decisions>
    <decisions>
        <name>decision_RealEstateRequest2</name>
        <label>物件情報提供依頼有無</label>
        <locationX>1033</locationX>
        <locationY>3352</locationY>
        <defaultConnector>
            <targetReference>loop_OperationCheckMaster</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>依頼なし</defaultConnectorLabel>
        <rules>
            <name>IsRequest2</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>get_ApplicationRecord.MediationRequest__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>decision_TypeTermCheck</targetReference>
            </connector>
            <label>依頼あり</label>
        </rules>
    </decisions>
    <decisions>
        <name>decision_RegulationCheckField</name>
        <label>チェック項目判定</label>
        <locationX>960</locationX>
        <locationY>2941</locationY>
        <defaultConnector>
            <targetReference>loop_OperationCheckMaster</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>デフォルトの結果</defaultConnectorLabel>
        <rules>
            <name>isMoveDate</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>loop_OperationCheckMaster.RegulationCheckField__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>入居日/契約日</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>decision_DesiredMoveDateCheck2</targetReference>
            </connector>
            <label>入居日/契約日</label>
        </rules>
        <rules>
            <name>isDesiredPreviewDate</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>loop_OperationCheckMaster.RegulationCheckField__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>下見希望日</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>decision_RealEstateRequest</targetReference>
            </connector>
            <label>下見希望日</label>
        </rules>
        <rules>
            <name>isRealEstateType</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>loop_OperationCheckMaster.RegulationCheckField__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>物件タイプ</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>decision_RealEstateRequest2</targetReference>
            </connector>
            <label>物件タイプ</label>
        </rules>
        <rules>
            <name>isRent</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>loop_OperationCheckMaster.RegulationCheckField__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>家賃</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>decision_CorporateHousingRegulationPatternNullCheck1</targetReference>
            </connector>
            <label>家賃</label>
        </rules>
        <rules>
            <name>isFloorPlan</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>loop_OperationCheckMaster.RegulationCheckField__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>間取</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>decision_CorporateHousingRegulationPatternNullCheck2</targetReference>
            </connector>
            <label>間取</label>
        </rules>
        <rules>
            <name>isArea</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>loop_OperationCheckMaster.RegulationCheckField__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>面積</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>decision_CorporateHousingRegulationPatternNullCheck3</targetReference>
            </connector>
            <label>面積</label>
        </rules>
    </decisions>
    <decisions>
        <name>decision_Rent</name>
        <label>家賃条件判定</label>
        <locationX>849</locationX>
        <locationY>3658</locationY>
        <defaultConnector>
            <targetReference>assign_ErrorMessageRent</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>チェック結果NG</defaultConnectorLabel>
        <rules>
            <name>CheckOK_Rent</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>get_ApplicationRecord.RentUpperLimit__c</leftValueReference>
                <operator>LessThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>get_CorporateHousingRegulationPatternRecord.UpperLimitRent__c</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>loop_OperationCheckMaster</targetReference>
            </connector>
            <label>チェック結果OK</label>
        </rules>
    </decisions>
    <decisions>
        <name>decision_RentCheck</name>
        <label>家賃条件チェック</label>
        <locationX>847</locationX>
        <locationY>3516</locationY>
        <defaultConnector>
            <targetReference>loop_OperationCheckMaster</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>チェックなし</defaultConnectorLabel>
        <rules>
            <name>IsRentCheck</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>get_CorporateHousingRegulationPatternRecord.UpperLimitRent__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>decision_Rent</targetReference>
            </connector>
            <label>家賃チェック</label>
        </rules>
    </decisions>
    <decisions>
        <name>decision_TypeTermCheck</name>
        <label>タイプ条件チェック</label>
        <locationX>1038</locationX>
        <locationY>3512</locationY>
        <defaultConnector>
            <targetReference>loop_OperationCheckMaster</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>チェックなし</defaultConnectorLabel>
        <rules>
            <name>IsTypeTermCheck</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>get_CorporateHousingRegulation.TypeTerms__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>decision_TypeTerms</targetReference>
            </connector>
            <label>タイプ条件チェック</label>
        </rules>
    </decisions>
    <decisions>
        <name>decision_TypeTerms</name>
        <label>タイプ条件判定</label>
        <locationX>1051</locationX>
        <locationY>3659</locationY>
        <defaultConnector>
            <targetReference>assign_ErrorMessageTypeTerm</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>チェック結果NG</defaultConnectorLabel>
        <rules>
            <name>CheckOK_TypeTerms</name>
            <conditionLogic>(1 OR 2) AND (3 OR 4) AND (5 OR 6) AND (7 OR 8) AND (9 OR 10) AND (11 OR 12) AND (13 OR 14) AND (15 OR 16) AND (17 OR 18) AND (19 OR 20)</conditionLogic>
            <conditions>
                <leftValueReference>get_CorporateHousingRegulation.TypeTerms__c</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>get_ApplicationRecord.RealEstateType1__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_ApplicationRecord.RealEstateType1__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_CorporateHousingRegulation.TypeTerms__c</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>get_ApplicationRecord.RealEstateType2__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_ApplicationRecord.RealEstateType2__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_CorporateHousingRegulation.TypeTerms__c</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>get_ApplicationRecord.RealEstateType3__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_ApplicationRecord.RealEstateType3__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_CorporateHousingRegulation.TypeTerms__c</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>get_ApplicationRecord.RealEstateType4__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_ApplicationRecord.RealEstateType4__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_CorporateHousingRegulation.TypeTerms__c</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>get_ApplicationRecord.RealEstateType5__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_ApplicationRecord.RealEstateType5__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_CorporateHousingRegulation.TypeTerms__c</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>get_ApplicationRecord.RealEstateType6__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_ApplicationRecord.RealEstateType6__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_CorporateHousingRegulation.TypeTerms__c</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>get_ApplicationRecord.RealEstateType7__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_ApplicationRecord.RealEstateType7__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_CorporateHousingRegulation.TypeTerms__c</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>get_ApplicationRecord.RealEstateType8__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_ApplicationRecord.RealEstateType8__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_CorporateHousingRegulation.TypeTerms__c</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>get_ApplicationRecord.RealEstateType9__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_ApplicationRecord.RealEstateType9__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_CorporateHousingRegulation.TypeTerms__c</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>get_ApplicationRecord.RealEstateType10__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_ApplicationRecord.RealEstateType10__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>loop_OperationCheckMaster</targetReference>
            </connector>
            <label>チェック結果OK</label>
        </rules>
    </decisions>
    <decisions>
        <name>dicision_TargetOperation</name>
        <label>対象業務判定</label>
        <locationX>1380</locationX>
        <locationY>822</locationY>
        <defaultConnector>
            <targetReference>loop_DecisionOperationCheckMaster</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>それ以外</defaultConnectorLabel>
        <rules>
            <name>isApplication</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>formula_Includes</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>assign_Collection</targetReference>
            </connector>
            <label>申請業務</label>
        </rules>
    </decisions>
    <description>社宅規定仕様変更</description>
    <environments>Default</environments>
    <formulas>
        <name>formula_City</name>
        <dataType>String</dataType>
        <expression>IF(
ISPICKVAL({!get_CorporateHousingRegulation.AddressForRent__c},&quot;事業所住所&quot;) ,{!get_ApplicationRecord.NewAdress2__c},
{!get_ApplicationRecord.DesiredAreaCity__c}
)</expression>
    </formulas>
    <formulas>
        <name>formula_DesiredMoveDate1Before10Days</name>
        <dataType>Date</dataType>
        <expression>IF(
ISBLANK({!get_ApplicationRecord.DesiredMoveDate1__c}),DATE(2999,12,31),
{!get_ApplicationRecord.DesiredMoveDate1__c} -10
)</expression>
    </formulas>
    <formulas>
        <name>formula_DesiredMoveDate2Before10Days</name>
        <dataType>Date</dataType>
        <expression>IF(
ISBLANK({!get_ApplicationRecord.DesiredMoveDate2__c}),DATE(2999,12,31),
{!get_ApplicationRecord.DesiredMoveDate2__c} -10
)</expression>
    </formulas>
    <formulas>
        <name>formula_FromDateJoin</name>
        <dataType>Date</dataType>
        <expression>{!formula_StandardDateJoin} - {!get_CorporateHousingRegulation.ContractPossibleJoineFrom__c}</expression>
    </formulas>
    <formulas>
        <name>formula_FromDateMarriage</name>
        <dataType>Date</dataType>
        <expression>{!formula_StandardDateMarriage} - {!get_CorporateHousingRegulation.ContractPossibleMarriageFrom__c}</expression>
    </formulas>
    <formulas>
        <name>formula_FromDateTransfer</name>
        <dataType>Date</dataType>
        <expression>{!formula_StandardDateTransfer} - {!get_CorporateHousingRegulation.ContractPossibleTransferFrom__c}</expression>
    </formulas>
    <formulas>
        <name>formula_Includes</name>
        <dataType>Boolean</dataType>
        <expression>INCLUDES({!loop_DecisionOperationCheckMaster.CheckTarget__c}, &quot;申請&quot;)</expression>
    </formulas>
    <formulas>
        <name>formula_NumOfResident</name>
        <dataType>Number</dataType>
        <expression>{!get_ApplicationRecord.ResidentNum__c} + 1</expression>
        <scale>0</scale>
    </formulas>
    <formulas>
        <name>formula_StandardDateJoin</name>
        <dataType>Date</dataType>
        <expression>IF(ISPICKVAL({!get_CorporateHousingRegulation.ContractPossibleStandardDateJoine__c},&quot;入社日&quot;),
{!get_ApplicationRecord.JoinDate__c},
IF(ISPICKVAL({!get_CorporateHousingRegulation.ContractPossibleStandardDateJoine__c},&quot;着任日&quot;),{!get_ApplicationRecord.InaugurationDate__c},null))</expression>
    </formulas>
    <formulas>
        <name>formula_StandardDateMarriage</name>
        <dataType>Date</dataType>
        <expression>IF(
ISPICKVAL({!get_CorporateHousingRegulation.ContractPossibleStandardDateMarriage__c},&quot;入籍日&quot;),{!get_ApplicationRecord.EnrollmentDate__c},null
)</expression>
    </formulas>
    <formulas>
        <name>formula_StandardDateTransfer</name>
        <dataType>Date</dataType>
        <expression>IF(ISPICKVAL({!get_CorporateHousingRegulation.ContractPossibleStandardDateTransfer__c},&quot;発令日&quot;),
{!get_ApplicationRecord.AnnouncementDate__c},
IF(ISPICKVAL({!get_CorporateHousingRegulation.ContractPossibleStandardDateTransfer__c},&quot;着任日&quot;),{!get_ApplicationRecord.InaugurationDate__c},null))</expression>
    </formulas>
    <formulas>
        <name>formula_State</name>
        <dataType>String</dataType>
        <expression>IF(
ISPICKVAL({!get_CorporateHousingRegulation.AddressForRent__c},&quot;事業所住所&quot;) ,{!get_ApplicationRecord.NewAdress1__c},
TEXT({!get_ApplicationRecord.DesiredAreaState__c})
)</expression>
    </formulas>
    <formulas>
        <name>formula_ToDateJoin</name>
        <dataType>Date</dataType>
        <expression>{!formula_StandardDateJoin} + {!get_CorporateHousingRegulation.ContractPossibleJoineTo__c}</expression>
    </formulas>
    <formulas>
        <name>formula_ToDateMarriage</name>
        <dataType>Date</dataType>
        <expression>{!formula_StandardDateMarriage} + {!get_CorporateHousingRegulation.ContractPossibleMarriageTo__c}</expression>
    </formulas>
    <formulas>
        <name>formula_ToDateTransfer</name>
        <dataType>Date</dataType>
        <expression>{!formula_StandardDateTransfer} + {!get_CorporateHousingRegulation.ContractPossibleTransferTo__c}</expression>
    </formulas>
    <interviewLabel>AP_申請時規定照合 {!$Flow.CurrentDateTime}</interviewLabel>
    <label>AP_申請時規定照合</label>
    <loops>
        <name>loop_DecisionOperationCheckMaster</name>
        <label>業務チェックマスタ判定ループ</label>
        <locationX>1166</locationX>
        <locationY>810</locationY>
        <collectionReference>get_OperationCheckMaster</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>dicision_TargetOperation</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>get_RelocationShapeMasterRecord</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <name>loop_OperationCheckMaster</name>
        <label>業務チェックマスタループ</label>
        <locationX>979</locationX>
        <locationY>2720</locationY>
        <collectionReference>varCol_OperationCheckMaster</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>decision_RegulationCheckField</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>update_Application</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <description>申請者の所属する取引先を取得</description>
        <name>get_AccountRecord</name>
        <label>取引先を取得</label>
        <locationX>996</locationX>
        <locationY>446</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>get_ServiceContractAll</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>get_ContactRecord.AccountId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Account</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>get_ApplicationRecord</name>
        <label>申請を取得</label>
        <locationX>996</locationX>
        <locationY>206</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>get_ContactRecord</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Application__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>get_ContactRecord</name>
        <label>取引先責任者を取得</label>
        <locationX>996</locationX>
        <locationY>326</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>get_AccountRecord</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>get_ApplicationRecord.ApplicantCode__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Contact</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>get_CorporateHousingRegulation</name>
        <label>社宅規定を取得</label>
        <locationX>987</locationX>
        <locationY>667</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>get_OperationCheckMaster</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>get_ContactRecord.CorporateHousingRegulation__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CorporateHousingRegulation__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>get_CorporateHousingRegulationPatternRecord</name>
        <label>社宅規定パターンを取得</label>
        <locationX>988</locationX>
        <locationY>2489</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>loop_OperationCheckMaster</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>CorporateHousingRegulation__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>get_CorporateHousingRegulation.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>RelocationShapeMaster__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>var_RelocationShapeMasterId</elementReference>
            </value>
        </filters>
        <filters>
            <field>TitleMaster__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>var_TitleMasterId</elementReference>
            </value>
        </filters>
        <filters>
            <field>DistrictMaster__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>var_DistrictMasterId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CorporateHousingRegulationPattern__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>get_DistrictMaster</name>
        <label>地区マスタを取得</label>
        <locationX>825</locationX>
        <locationY>2280</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>get_CorporateHousingRegulationPatternRecord</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>var_DistrictMasterId</elementReference>
            </value>
        </filters>
        <object>DistrictMaster__c</object>
        <outputAssignments>
            <assignToReference>var_DistrictMasterId</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>get_OperationCheckMaster</name>
        <label>業務チェックマスタ取得</label>
        <locationX>995</locationX>
        <locationY>810</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>loop_DecisionOperationCheckMaster</targetReference>
        </connector>
        <filterLogic>1 AND (2 OR 3)</filterLogic>
        <filters>
            <field>RegulationCheckField__c</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>ServiceContractAll__c</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>ServiceContractAll__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>get_ServiceContractAll.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>OperationCheckMaster__c</object>
        <sortField>SortOrder__c</sortField>
        <sortOrder>Asc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>get_RelocationShapeMasterRecord</name>
        <label>赴任形態マスタを取得</label>
        <locationX>994</locationX>
        <locationY>975</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>get_TitleRecord</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Account__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>get_AccountRecord.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>RelocationShape__c</field>
            <operator>Contains</operator>
            <value>
                <elementReference>get_ApplicationRecord.NewAssignmentType__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>NumOfResidentLower__c</field>
            <operator>LessThanOrEqualTo</operator>
            <value>
                <elementReference>formula_NumOfResident</elementReference>
            </value>
        </filters>
        <filters>
            <field>NumOfResidentUpper__c</field>
            <operator>GreaterThanOrEqualTo</operator>
            <value>
                <elementReference>formula_NumOfResident</elementReference>
            </value>
        </filters>
        <object>RelocationShapeMaster__c</object>
        <outputAssignments>
            <assignToReference>var_RelocationShapeMasterId</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>get_ServiceContractAll</name>
        <label>サービス全体を取得</label>
        <locationX>993</locationX>
        <locationY>561</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>get_CorporateHousingRegulation</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>get_AccountRecord.ServiceContractAll__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>ServiceContractAll__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>get_TargetDistrictAllCity</name>
        <label>対象地区を取得（市区郡全て）</label>
        <locationX>539</locationX>
        <locationY>1968</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>get_DistrictMaster</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>State__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>formula_State</elementReference>
            </value>
        </filters>
        <filters>
            <field>IsAllCity__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>AccountId__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>get_AccountRecord.Id</elementReference>
            </value>
        </filters>
        <object>TargetDistrict__c</object>
        <outputAssignments>
            <assignToReference>var_DistrictMasterId</assignToReference>
            <field>DistrictMaster__c</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>get_TargetDistrictCity</name>
        <label>対象地区を取得（市区郡）</label>
        <locationX>825</locationX>
        <locationY>1488</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>decision_DistrictMastertId</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>City__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>formula_City</elementReference>
            </value>
        </filters>
        <filters>
            <field>State__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>formula_State</elementReference>
            </value>
        </filters>
        <filters>
            <field>Exception__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>AccountId__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>get_AccountRecord.Id</elementReference>
            </value>
        </filters>
        <object>TargetDistrict__c</object>
        <outputAssignments>
            <assignToReference>var_DistrictMasterId</assignToReference>
            <field>DistrictMaster__c</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>get_TargetDistrictCityException</name>
        <label>対象地区を取得（市区郡除外）</label>
        <locationX>671</locationX>
        <locationY>1728</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>decision_ExceptionRecord</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>City__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>formula_City</elementReference>
            </value>
        </filters>
        <filters>
            <field>Exception__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>AccountId__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>get_AccountRecord.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>TargetDistrict__c</object>
        <queriedFields>Id</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>get_TitleMaster</name>
        <label>職位マスタを取得</label>
        <locationX>990</locationX>
        <locationY>1248</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>decision_DesiredArea</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>get_TitleRecord.TitleMaster__c</elementReference>
            </value>
        </filters>
        <object>TitleMaster__c</object>
        <outputAssignments>
            <assignToReference>var_TitleMasterId</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>get_TitleRecord</name>
        <label>職位を取得</label>
        <locationX>990</locationX>
        <locationY>1128</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>get_TitleMaster</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AccountId__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>get_AccountRecord.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>get_ApplicationRecord.Title__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Title__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>update_Application</name>
        <label>申請を更新</label>
        <locationX>647</locationX>
        <locationY>2728</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>AlertMessage__c</field>
            <value>
                <elementReference>var_AlertMessage</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ErrorMessage__c</field>
            <value>
                <elementReference>var_ErrorMessage</elementReference>
            </value>
        </inputAssignments>
        <object>Application__c</object>
    </recordUpdates>
    <runInMode>SystemModeWithoutSharing</runInMode>
    <start>
        <locationX>870</locationX>
        <locationY>48</locationY>
        <connector>
            <targetReference>get_ApplicationRecord</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>text_AlertMessageDesiredMoveDate</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>＜入居希望日アラート＞
{!loop_OperationCheckMaster.AutoCheckErrorMessage__c}
-</text>
    </textTemplates>
    <textTemplates>
        <name>text_AlertMessageDesiredPreviewDate</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>＜下見希望日アラート＞
下見希望日が入居希望日に対して直近です。ご注意ください。
-</text>
    </textTemplates>
    <textTemplates>
        <name>text_ErrorMessageArea</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>＜面積エラー＞
{!loop_OperationCheckMaster.AutoCheckErrorMessage__c}
規定の内容を確認し、修正をしてください。
-</text>
    </textTemplates>
    <textTemplates>
        <name>text_ErrorMessageFloorPlan</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>＜間取エラー＞
{!loop_OperationCheckMaster.AutoCheckErrorMessage__c}
規定の内容を確認し、修正をしてください。
-</text>
    </textTemplates>
    <textTemplates>
        <name>text_ErrorMessageRent</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>＜家賃エラー＞
{!loop_OperationCheckMaster.AutoCheckErrorMessage__c}
規定の内容を確認し、修正をしてください。
-</text>
    </textTemplates>
    <textTemplates>
        <name>text_ErrorMessageTypeTerms</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>＜タイプエラー＞
{!loop_OperationCheckMaster.AutoCheckErrorMessage__c}
規定の内容を確認し、修正をしてください。
-</text>
    </textTemplates>
    <variables>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>var_AlertMessage</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>var_DistrictMasterId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>var_ErrorMessage</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>var_RelocationShapeMasterId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>var_TitleMasterId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varCol_OperationCheckMaster</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>OperationCheckMaster__c</objectType>
    </variables>
</Flow>
