<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>54.0</apiVersion>
    <assignments>
        <name>assign_AlertMessage2</name>
        <label>アラートメッセージに割りあて</label>
        <locationX>657</locationX>
        <locationY>1580</locationY>
        <assignmentItems>
            <assignToReference>var_AlertMessage</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>text_AlertMessageDesiredPreviewDate</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>decision_TypeTermCheck</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>assign_ErrorMessageArea</name>
        <label>エラーメッセージに割りあて</label>
        <locationX>944</locationX>
        <locationY>4182</locationY>
        <assignmentItems>
            <assignToReference>var_ErrorMessage</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>text_ErrorMessageArea</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>assign_Message</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>assign_ErrorMessageDesiredMoveDate</name>
        <label>エラーメッセージ割り当て</label>
        <locationX>935</locationX>
        <locationY>1484</locationY>
        <assignmentItems>
            <assignToReference>var_AlertMessage</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>text_AlertMessageDesiredMoveDate</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>var_AlertMessage</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>formula_LineBreak</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>assign_AlertMessage2</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>assign_ErrorMessageFloorPlan</name>
        <label>エラーメッセージに割りあて</label>
        <locationX>957</locationX>
        <locationY>3881</locationY>
        <assignmentItems>
            <assignToReference>var_ErrorMessage</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>text_ErrorMessageFloorPlan</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>var_ErrorMessage</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>formula_LineBreak</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>decision_AreaCheck</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>assign_ErrorMessagePet</name>
        <label>エラーメッセージに割りあて</label>
        <locationX>1011</locationX>
        <locationY>2240</locationY>
        <assignmentItems>
            <assignToReference>var_ErrorMessage</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>text_ErrorMessagePet</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>var_ErrorMessage</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>formula_LineBreak</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>get_RelocationShapeMaster</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>assign_ErrorMessageRent</name>
        <label>エラーメッセージに割りあて</label>
        <locationX>939</locationX>
        <locationY>3620</locationY>
        <assignmentItems>
            <assignToReference>var_ErrorMessage</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>text_ErrorMessageRent</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>var_ErrorMessage</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>formula_LineBreak</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>decision_FloorPlanCheck</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>assign_ErrorMessageTypeTerm</name>
        <label>エラーメッセージに割りあて</label>
        <locationX>996</locationX>
        <locationY>1890</locationY>
        <assignmentItems>
            <assignToReference>var_ErrorMessage</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>text_ErrorMessageTypeTerms</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>var_ErrorMessage</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>formula_LineBreak</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>decision_PetCheck</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>assign_Message</name>
        <label>メッセージを割り当て</label>
        <locationX>188</locationX>
        <locationY>4379</locationY>
        <assignmentItems>
            <assignToReference>get_Application.AlertMessage__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>var_AlertMessage</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>get_Application.ErrorMessage__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>var_ErrorMessage</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>update_ApplicationRecord</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>decision_Area</name>
        <label>面積判定</label>
        <locationX>713</locationX>
        <locationY>4114</locationY>
        <defaultConnector>
            <targetReference>assign_ErrorMessageArea</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>チェック結果NG</defaultConnectorLabel>
        <rules>
            <name>isCheckOK_Area</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>get_Application.DesiredAreaTo__c</leftValueReference>
                <operator>LessThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>get_CorporateHousingRegulationPatternRecord.AreaUpperLimit__c</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>assign_Message</targetReference>
            </connector>
            <label>チェック結果OK</label>
        </rules>
    </decisions>
    <decisions>
        <name>decision_AreaCheck</name>
        <label>面積チェック</label>
        <locationX>489</locationX>
        <locationY>4039</locationY>
        <defaultConnector>
            <targetReference>assign_Message</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>チェックなし</defaultConnectorLabel>
        <rules>
            <name>isAreaCheck</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>get_CheckFieldsMaster.AreaUpperLimitCheck__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_CorporateHousingRegulationPatternRecord.AreaUpperLimit__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>decision_Area</targetReference>
            </connector>
            <label>面積チェック</label>
        </rules>
    </decisions>
    <decisions>
        <name>decision_CorporateHousingRegulationPatternNullCheck</name>
        <label>社宅規定パターンNullチェック</label>
        <locationX>167</locationX>
        <locationY>3308</locationY>
        <defaultConnector>
            <targetReference>decision_RentCheck</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>NotNull</defaultConnectorLabel>
        <rules>
            <name>isNullCorporateHousingRegulationPatternRecord</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>get_CorporateHousingRegulationPatternRecord</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>assign_Message</targetReference>
            </connector>
            <label>Null</label>
        </rules>
    </decisions>
    <decisions>
        <name>decision_DesiredArea</name>
        <label>希望エリアチェック</label>
        <locationX>182</locationX>
        <locationY>2778</locationY>
        <defaultConnector>
            <targetReference>get_CorporateHousingRegulationPatternRecord</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>チェックなし</defaultConnectorLabel>
        <rules>
            <name>isCity</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>get_Application.DesiredAreaCity__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_Application.DesiredAreaState__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>get_TargetDistrictCity</targetReference>
            </connector>
            <label>市区郡入力済み</label>
        </rules>
    </decisions>
    <decisions>
        <name>decision_DesiredMoveDate_Join</name>
        <label>入居希望日判定（入社）</label>
        <locationX>1061</locationX>
        <locationY>1113</locationY>
        <defaultConnector>
            <targetReference>assign_ErrorMessageDesiredMoveDate</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>チェック結果NG</defaultConnectorLabel>
        <rules>
            <name>isCheckOK_Join</name>
            <conditionLogic>((1 AND 2) OR 3) AND ((4 AND 5) OR 6)</conditionLogic>
            <conditions>
                <leftValueReference>get_Application.DesiredMoveDate1__c</leftValueReference>
                <operator>GreaterThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>formula_FromDateJoin</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_Application.DesiredMoveDate1__c</leftValueReference>
                <operator>LessThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>formula_ToDateJoin</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_Application.DesiredMoveDate1__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_Application.DesiredMoveDate2__c</leftValueReference>
                <operator>GreaterThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>formula_FromDateJoin</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_Application.DesiredMoveDate2__c</leftValueReference>
                <operator>LessThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>formula_ToDateJoin</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_Application.DesiredMoveDate2__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>decision_DesiredPreviewDate</targetReference>
            </connector>
            <label>チェック結果OK</label>
        </rules>
    </decisions>
    <decisions>
        <name>decision_DesiredMoveDate_Marriage</name>
        <label>入居希望日判定（結婚）</label>
        <locationX>778</locationX>
        <locationY>1102</locationY>
        <defaultConnector>
            <targetReference>assign_ErrorMessageDesiredMoveDate</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>チェック結果NG</defaultConnectorLabel>
        <rules>
            <name>isCheckOK_Marriage</name>
            <conditionLogic>((1 AND 2) OR 3) AND ((4 AND 5) OR 6)</conditionLogic>
            <conditions>
                <leftValueReference>get_Application.DesiredMoveDate1__c</leftValueReference>
                <operator>GreaterThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>formula_FromDateMarriage</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_Application.DesiredMoveDate1__c</leftValueReference>
                <operator>LessThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>formula_ToDateMarriage</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_Application.DesiredMoveDate1__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_Application.DesiredMoveDate2__c</leftValueReference>
                <operator>GreaterThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>formula_FromDateMarriage</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_Application.DesiredMoveDate2__c</leftValueReference>
                <operator>LessThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>formula_ToDateMarriage</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_Application.DesiredMoveDate2__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>decision_DesiredPreviewDate</targetReference>
            </connector>
            <label>チェック結果OK</label>
        </rules>
    </decisions>
    <decisions>
        <name>decision_DesiredMoveDate_Transfer</name>
        <label>入居希望日判定（転勤）</label>
        <locationX>478</locationX>
        <locationY>1052</locationY>
        <defaultConnector>
            <targetReference>assign_ErrorMessageDesiredMoveDate</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>チェック結果NG</defaultConnectorLabel>
        <rules>
            <name>isCheckOK_Transfer</name>
            <conditionLogic>((1 AND 2) OR 3) AND ((4 AND 5) OR 6)</conditionLogic>
            <conditions>
                <leftValueReference>get_Application.DesiredMoveDate1__c</leftValueReference>
                <operator>GreaterThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>formula_FromDateTransfer</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_Application.DesiredMoveDate1__c</leftValueReference>
                <operator>LessThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>formula_ToDateTransfer</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_Application.DesiredMoveDate1__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_Application.DesiredMoveDate2__c</leftValueReference>
                <operator>GreaterThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>formula_FromDateTransfer</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_Application.DesiredMoveDate2__c</leftValueReference>
                <operator>LessThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>formula_ToDateTransfer</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_Application.DesiredMoveDate2__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>decision_DesiredPreviewDate</targetReference>
            </connector>
            <label>チェック結果OK</label>
        </rules>
    </decisions>
    <decisions>
        <name>decision_DesiredMoveDateCheck</name>
        <label>入居希望日チェック</label>
        <locationX>776</locationX>
        <locationY>926</locationY>
        <defaultConnector>
            <targetReference>decision_DesiredPreviewDate</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>入居希望日チェックなし</defaultConnectorLabel>
        <rules>
            <name>isDesiredMoveDateCheck_Transfer</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>get_CheckFieldsMaster.ContractPossibleDateCheck__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>formula_StandardDateTransfer</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>decision_DesiredMoveDate_Transfer</targetReference>
            </connector>
            <label>入居希望日チェック（転勤）</label>
        </rules>
        <rules>
            <name>isDesiredMoveDateCheck_Marriage</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>get_CheckFieldsMaster.ContractPossibleDateCheck__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>formula_StandardDateMarriage</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>decision_DesiredMoveDate_Marriage</targetReference>
            </connector>
            <label>入居希望日チェック（結婚）</label>
        </rules>
        <rules>
            <name>isDesiredMoveDateCheck_Join</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>get_CheckFieldsMaster.ContractPossibleDateCheck__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>formula_StandardDateJoin</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>decision_DesiredMoveDate_Join</targetReference>
            </connector>
            <label>入居希望日チェック（入社）</label>
        </rules>
    </decisions>
    <decisions>
        <name>decision_DesiredPreviewDate</name>
        <label>下見希望日判定</label>
        <locationX>23</locationX>
        <locationY>1474</locationY>
        <defaultConnector>
            <targetReference>assign_AlertMessage2</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>チェック結果NG</defaultConnectorLabel>
        <rules>
            <name>isCheckOK_DesiredPreviewDate</name>
            <conditionLogic>(( 1 AND 2 ) OR 3 ) AND ((4 AND 5 ) OR 6)</conditionLogic>
            <conditions>
                <leftValueReference>get_Application.DesiredPreviewDate1__c</leftValueReference>
                <operator>LessThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>formula_DesiredMoveDate1Before10Days</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_Application.DesiredPreviewDate1__c</leftValueReference>
                <operator>LessThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>formula_DesiredMoveDate2Before10Days</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_Application.DesiredPreviewDate1__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_Application.DesiredPreviewDate2__c</leftValueReference>
                <operator>LessThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>formula_DesiredMoveDate1Before10Days</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_Application.DesiredPreviewDate2__c</leftValueReference>
                <operator>LessThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>formula_DesiredMoveDate2Before10Days</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_Application.DesiredPreviewDate2__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>decision_TypeTermCheck</targetReference>
            </connector>
            <label>チェック結果OK</label>
        </rules>
    </decisions>
    <decisions>
        <name>decision_DistrictMastertId</name>
        <label>地区マスタIDチェック</label>
        <locationX>670</locationX>
        <locationY>2780</locationY>
        <defaultConnector>
            <targetReference>get_DistrictMaster</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>NotNull</defaultConnectorLabel>
        <rules>
            <name>isNullTargetDistrictId</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>var_DistrictMasterId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>get_TargetDistrictCityException</targetReference>
            </connector>
            <label>Null</label>
        </rules>
    </decisions>
    <decisions>
        <name>decision_ExceptionRecord</name>
        <label>除外レコードチェック</label>
        <locationX>1246</locationX>
        <locationY>2892</locationY>
        <defaultConnector>
            <targetReference>get_DistrictMaster</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>NotNull</defaultConnectorLabel>
        <rules>
            <name>isNullExceptionRecord</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>get_TargetDistrictCityException</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>get_TargetDistrictAllCity</targetReference>
            </connector>
            <label>Null</label>
        </rules>
    </decisions>
    <decisions>
        <name>decision_FloorPlan</name>
        <label>間取判定</label>
        <locationX>720</locationX>
        <locationY>3795</locationY>
        <defaultConnector>
            <targetReference>assign_ErrorMessageFloorPlan</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>チェック結果NG</defaultConnectorLabel>
        <rules>
            <name>isCheckOK_FloorPlan</name>
            <conditionLogic>(1 OR 2) AND (3 OR 4) AND (5 OR 6) AND (7 OR 8) AND (9 OR 10) AND (11 OR 12) AND (13 OR 14) AND (15 OR 16) AND (17 OR 18) AND (19 OR 20)</conditionLogic>
            <conditions>
                <leftValueReference>get_CorporateHousingRegulationPatternRecord.FloorPlanRegulation1__c</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>get_Application.FloorPlan1__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_Application.FloorPlan1__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_CorporateHousingRegulationPatternRecord.FloorPlanRegulation1__c</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>get_Application.FloorPlan2__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_Application.FloorPlan2__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_CorporateHousingRegulationPatternRecord.FloorPlanRegulation1__c</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>get_Application.FloorPlan3__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_Application.FloorPlan3__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_CorporateHousingRegulationPatternRecord.FloorPlanRegulation1__c</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>get_Application.FloorPlan4__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_Application.FloorPlan4__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_CorporateHousingRegulationPatternRecord.FloorPlanRegulation1__c</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>get_Application.FloorPlan5__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_Application.FloorPlan5__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_CorporateHousingRegulationPatternRecord.FloorPlanRegulation1__c</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>get_Application.FloorPlan6__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_Application.FloorPlan6__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_CorporateHousingRegulationPatternRecord.FloorPlanRegulation1__c</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>get_Application.FloorPlan7__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_Application.FloorPlan7__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_CorporateHousingRegulationPatternRecord.FloorPlanRegulation1__c</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>get_Application.FloorPlan8__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_Application.FloorPlan8__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_CorporateHousingRegulationPatternRecord.FloorPlanRegulation1__c</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>get_Application.FloorPlan9__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_Application.FloorPlan9__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_CorporateHousingRegulationPatternRecord.FloorPlanRegulation1__c</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>get_Application.FloorPlan10__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_Application.FloorPlan10__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>decision_AreaCheck</targetReference>
            </connector>
            <label>チェック結果OK</label>
        </rules>
    </decisions>
    <decisions>
        <name>decision_FloorPlanCheck</name>
        <label>間取チェック</label>
        <locationX>489</locationX>
        <locationY>3732</locationY>
        <defaultConnector>
            <targetReference>decision_AreaCheck</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>チェックなし</defaultConnectorLabel>
        <rules>
            <name>isFloorPlanCheck</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>get_CheckFieldsMaster.FloorPlanRegulationCheck__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_CorporateHousingRegulationPatternRecord.FloorPlanRegulation1__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>decision_FloorPlan</targetReference>
            </connector>
            <label>間取チェック</label>
        </rules>
    </decisions>
    <decisions>
        <name>decision_Pet</name>
        <label>ペット判定</label>
        <locationX>535</locationX>
        <locationY>2119</locationY>
        <defaultConnector>
            <targetReference>assign_ErrorMessagePet</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>チェック結果NG</defaultConnectorLabel>
        <rules>
            <name>isCheckOK_Pet</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>get_Application.IsPet__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>無し</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>get_RelocationShapeMaster</targetReference>
            </connector>
            <label>チェック結果OK</label>
        </rules>
    </decisions>
    <decisions>
        <name>decision_PetCheck</name>
        <label>ペット条件チェック</label>
        <locationX>185</locationX>
        <locationY>2047</locationY>
        <defaultConnector>
            <targetReference>get_RelocationShapeMaster</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>チェックなし</defaultConnectorLabel>
        <rules>
            <name>isPetCheck</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>get_CheckFieldsMaster.PetCheck__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_CorporateHousingRegulation.Pet__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>ペット飼育不可</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_Application.IsPet__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>decision_Pet</targetReference>
            </connector>
            <label>ペットチェック</label>
        </rules>
    </decisions>
    <decisions>
        <name>decision_Rent</name>
        <label>家賃条件判定</label>
        <locationX>732</locationX>
        <locationY>3468</locationY>
        <defaultConnector>
            <targetReference>assign_ErrorMessageRent</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>チェック結果NG</defaultConnectorLabel>
        <rules>
            <name>isCheckOK_Rent</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>get_Application.RentUpperLimit__c</leftValueReference>
                <operator>LessThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>get_CorporateHousingRegulationPatternRecord.UpperLimitRent__c</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>decision_FloorPlanCheck</targetReference>
            </connector>
            <label>チェック結果OK</label>
        </rules>
    </decisions>
    <decisions>
        <name>decision_RentCheck</name>
        <label>家賃条件チェック</label>
        <locationX>478</locationX>
        <locationY>3379</locationY>
        <defaultConnector>
            <targetReference>decision_FloorPlanCheck</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>チェックなし</defaultConnectorLabel>
        <rules>
            <name>isRentCheck</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>get_CheckFieldsMaster.UpperLimitRentCheck__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_CorporateHousingRegulationPatternRecord.UpperLimitRent__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>decision_Rent</targetReference>
            </connector>
            <label>家賃チェック</label>
        </rules>
    </decisions>
    <decisions>
        <name>decision_TypeTermCheck</name>
        <label>タイプ条件チェック</label>
        <locationX>183</locationX>
        <locationY>1727</locationY>
        <defaultConnector>
            <targetReference>decision_PetCheck</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>チェックなし</defaultConnectorLabel>
        <rules>
            <name>isTypeTermCheck</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>get_CheckFieldsMaster.TypeTermsCheck__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_CorporateHousingRegulation.TypeTerms__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>decision_TypeTerms</targetReference>
            </connector>
            <label>タイプ条件チェック</label>
        </rules>
    </decisions>
    <decisions>
        <name>decision_TypeTerms</name>
        <label>タイプ条件判定</label>
        <locationX>530</locationX>
        <locationY>1779</locationY>
        <defaultConnector>
            <targetReference>assign_ErrorMessageTypeTerm</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>チェック結果NG</defaultConnectorLabel>
        <rules>
            <name>isCheckOK_TypeTerms</name>
            <conditionLogic>( 1 OR 2 ) AND ( 3 OR 4 ) AND ( 5 OR 6 ) AND ( 7 OR 8 ) AND ( 9 OR 10 ) AND ( 11 OR 12 )  AND ( 13 OR 14 ) AND ( 15 OR 16 ) AND ( 17 OR 18 ) AND  ( 19 OR 20 )</conditionLogic>
            <conditions>
                <leftValueReference>get_CorporateHousingRegulation.TypeTerms__c</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>get_Application.RealEstateType1__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_Application.RealEstateType1__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_CorporateHousingRegulation.TypeTerms__c</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>get_Application.RealEstateType2__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_Application.RealEstateType2__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_CorporateHousingRegulation.TypeTerms__c</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>get_Application.RealEstateType3__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_Application.RealEstateType3__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_CorporateHousingRegulation.TypeTerms__c</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>get_Application.RealEstateType4__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_Application.RealEstateType4__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_CorporateHousingRegulation.TypeTerms__c</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>get_Application.RealEstateType5__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_Application.RealEstateType5__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_CorporateHousingRegulation.TypeTerms__c</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>get_Application.RealEstateType6__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_Application.RealEstateType6__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_CorporateHousingRegulation.TypeTerms__c</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>get_Application.RealEstateType7__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_Application.RealEstateType7__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_CorporateHousingRegulation.TypeTerms__c</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>get_Application.RealEstateType8__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_Application.RealEstateType8__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_CorporateHousingRegulation.TypeTerms__c</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>get_Application.RealEstateType9__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_Application.RealEstateType9__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_CorporateHousingRegulation.TypeTerms__c</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>get_Application.RealEstateType10__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_Application.RealEstateType10__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>decision_PetCheck</targetReference>
            </connector>
            <label>チェック結果OK</label>
        </rules>
    </decisions>
    <formulas>
        <name>formula_DesiredMoveDate1Before10Days</name>
        <dataType>Date</dataType>
        <expression>IF(
ISBLANK({!get_Application.DesiredMoveDate1__c}),DATE(2999,12,31),
{!get_Application.DesiredMoveDate1__c} -10
)</expression>
    </formulas>
    <formulas>
        <name>formula_DesiredMoveDate2Before10Days</name>
        <dataType>Date</dataType>
        <expression>IF(
ISBLANK({!get_Application.DesiredMoveDate2__c}),DATE(2999,12,31),
{!get_Application.DesiredMoveDate2__c} -10
)</expression>
    </formulas>
    <formulas>
        <name>formula_FromDateJoin</name>
        <dataType>Date</dataType>
        <expression>{!formula_StandardDateJoin} - {!get_CorporateHousingRegulation.ContractPossibleJoineFrom__c}</expression>
    </formulas>
    <formulas>
        <name>formula_FromDateMarriage</name>
        <dataType>Date</dataType>
        <expression>{!formula_StandardDateMarriage} - {!get_CorporateHousingRegulation.ContractPossibleMarriageFrom__c}</expression>
    </formulas>
    <formulas>
        <name>formula_FromDateTransfer</name>
        <dataType>Date</dataType>
        <expression>{!formula_StandardDateTransfer} - {!get_CorporateHousingRegulation.ContractPossibleTransferFrom__c}</expression>
    </formulas>
    <formulas>
        <name>formula_IsMove</name>
        <dataType>Boolean</dataType>
        <expression>IF(ISPICKVAL({!get_Application.NewAssignmentType__c},&quot;単身赴任&quot;),false,true)</expression>
    </formulas>
    <formulas>
        <name>formula_LineBreak</name>
        <dataType>String</dataType>
        <expression>SUBSTITUTE({!$Label.LineBreak},&quot;-&quot;,&quot;&quot;)</expression>
    </formulas>
    <formulas>
        <name>formula_StandardDateJoin</name>
        <dataType>Date</dataType>
        <expression>IF(ISPICKVAL({!get_CorporateHousingRegulation.ContractPossibleStandardDateJoine__c},&quot;入社日&quot;),
{!get_Application.JoinDate__c},
IF(ISPICKVAL({!get_CorporateHousingRegulation.ContractPossibleStandardDateJoine__c},&quot;着任日&quot;),{!get_Application.InaugurationDate__c},null))</expression>
    </formulas>
    <formulas>
        <name>formula_StandardDateMarriage</name>
        <dataType>Date</dataType>
        <expression>IF(
ISPICKVAL({!get_CorporateHousingRegulation.ContractPossibleStandardDateMarriage__c},&quot;入籍日&quot;),{!get_Application.EnrollmentDate__c},null
)</expression>
    </formulas>
    <formulas>
        <name>formula_StandardDateTransfer</name>
        <dataType>Date</dataType>
        <expression>IF(ISPICKVAL({!get_CorporateHousingRegulation.ContractPossibleStandardDateTransfer__c},&quot;発令日&quot;),
{!get_Application.AnnouncementDate__c},
IF(ISPICKVAL({!get_CorporateHousingRegulation.ContractPossibleStandardDateTransfer__c},&quot;着任日&quot;),{!get_Application.InaugurationDate__c},null))</expression>
    </formulas>
    <formulas>
        <name>formula_ToDateJoin</name>
        <dataType>Date</dataType>
        <expression>{!formula_StandardDateJoin} + {!get_CorporateHousingRegulation.ContractPossibleJoineTo__c}</expression>
    </formulas>
    <formulas>
        <name>formula_ToDateMarriage</name>
        <dataType>Date</dataType>
        <expression>{!formula_StandardDateMarriage} + {!get_CorporateHousingRegulation.ContractPossibleMarriageTo__c}</expression>
    </formulas>
    <formulas>
        <name>formula_ToDateTransfer</name>
        <dataType>Date</dataType>
        <expression>{!formula_StandardDateTransfer} + {!get_CorporateHousingRegulation.ContractPossibleTransferTo__c}</expression>
    </formulas>
    <interviewLabel>斡旋依頼チェック {!$Flow.CurrentDateTime}</interviewLabel>
    <label>AP_斡旋依頼チェック</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>get_Account</name>
        <label>取引先を取得</label>
        <locationX>776</locationX>
        <locationY>583</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>get_CorporateHousingRegulation</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>get_Contact.AccountId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Account</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>get_Application</name>
        <label>申請を取得</label>
        <locationX>778</locationX>
        <locationY>319</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>get_Contact</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>RecordId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Application__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>get_CheckFieldsMaster</name>
        <label>チェック項目マスタを取得</label>
        <locationX>776</locationX>
        <locationY>806</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>decision_DesiredMoveDateCheck</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>CorporateHousingRegulation__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>get_CorporateHousingRegulation.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CheckFieldsMaster__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>get_Contact</name>
        <label>取引先責任者を取得</label>
        <locationX>776</locationX>
        <locationY>449</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>get_Account</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>get_Application.ApplicantCode__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Contact</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>get_CorporateHousingRegulation</name>
        <label>社宅規定を取得</label>
        <locationX>776</locationX>
        <locationY>685</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>get_CheckFieldsMaster</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>get_Contact.CorporateHousingRegulation__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CorporateHousingRegulation__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>get_CorporateHousingRegulationPatternRecord</name>
        <label>社宅規定パターンを取得</label>
        <locationX>176</locationX>
        <locationY>3062</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>decision_CorporateHousingRegulationPatternNullCheck</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>CorporateHousingRegulation__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>get_CorporateHousingRegulation.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>RelocationShapeMaster__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>var_RelocationShapeMasterId</elementReference>
            </value>
        </filters>
        <filters>
            <field>TitleMaster__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>var_TitleMasterId</elementReference>
            </value>
        </filters>
        <filters>
            <field>DistrictMaster__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>var_DistrictMasterId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CorporateHousingRegulationPattern__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>get_DistrictMaster</name>
        <label>地区マスタを取得</label>
        <locationX>678</locationX>
        <locationY>3066</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>get_CorporateHousingRegulationPatternRecord</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>var_DistrictMasterId</elementReference>
            </value>
        </filters>
        <object>DistrictMaster__c</object>
        <outputAssignments>
            <assignToReference>var_DistrictMasterId</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>get_RelocationShapeMaster</name>
        <label>赴任形態マスタを取得</label>
        <locationX>189</locationX>
        <locationY>2313</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>get_Title</targetReference>
        </connector>
        <filterLogic>1 AND (2 OR 5) AND 3 AND 4</filterLogic>
        <filters>
            <field>Account__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>get_Account.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>IsSpouse__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>get_Contact.IsSpouse__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>IsMove__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>formula_IsMove</elementReference>
            </value>
        </filters>
        <filters>
            <field>NumOfResidentFamily__c</field>
            <operator>GreaterThanOrEqualTo</operator>
            <value>
                <elementReference>get_Application.ResidentNum__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>IsSpouse__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>両方</stringValue>
            </value>
        </filters>
        <object>RelocationShapeMaster__c</object>
        <outputAssignments>
            <assignToReference>var_RelocationShapeMasterId</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>get_TargetDistrictAllCity</name>
        <label>対象地区を取得（市区郡全て）</label>
        <locationX>1128</locationX>
        <locationY>3072</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>get_DistrictMaster</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>State__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>get_Application.DesiredAreaState__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>IsAllCity__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>AccountId__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>get_Account.Id</elementReference>
            </value>
        </filters>
        <object>TargetDistrict__c</object>
        <outputAssignments>
            <assignToReference>var_DistrictMasterId</assignToReference>
            <field>DistrictMaster__c</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>get_TargetDistrictCity</name>
        <label>対象地区を取得（市区郡）</label>
        <locationX>481</locationX>
        <locationY>2777</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>decision_DistrictMastertId</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>City__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>get_Application.DesiredAreaCity__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>State__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>get_Application.DesiredAreaState__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Exception__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>AccountId__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>get_Account.Id</elementReference>
            </value>
        </filters>
        <object>TargetDistrict__c</object>
        <outputAssignments>
            <assignToReference>var_DistrictMasterId</assignToReference>
            <field>DistrictMaster__c</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>get_TargetDistrictCityException</name>
        <label>対象地区を取得（市区郡除外）</label>
        <locationX>927</locationX>
        <locationY>2815</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>decision_ExceptionRecord</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>City__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>get_Application.DesiredAreaCity__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Exception__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>AccountId__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>get_Account.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>TargetDistrict__c</object>
        <queriedFields>Id</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>get_Title</name>
        <label>職位を取得</label>
        <locationX>189</locationX>
        <locationY>2448</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>get_TitleMaster</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AccountId__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>get_Account.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>get_Application.Title__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Title__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>get_TitleMaster</name>
        <label>職位マスタを取得</label>
        <locationX>191</locationX>
        <locationY>2609</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>decision_DesiredArea</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>get_Title.TitleMaster__c</elementReference>
            </value>
        </filters>
        <object>TitleMaster__c</object>
        <outputAssignments>
            <assignToReference>var_TitleMasterId</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <recordUpdates>
        <name>update_ApplicationRecord</name>
        <label>申請レコードを更新</label>
        <locationX>192</locationX>
        <locationY>4524</locationY>
        <inputReference>get_Application</inputReference>
    </recordUpdates>
    <start>
        <locationX>650</locationX>
        <locationY>48</locationY>
        <connector>
            <targetReference>get_Application</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>text_AlertMessageDesiredMoveDate</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>＜入居希望日アラート＞
{!get_CheckFieldsMaster.ContractPossibleDateMessage__c}</text>
    </textTemplates>
    <textTemplates>
        <name>text_AlertMessageDesiredPreviewDate</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>＜下見希望日アラート＞
下見希望日が入居希望日に対して直近です。ご注意ください。</text>
    </textTemplates>
    <textTemplates>
        <name>text_ErrorMessageArea</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>＜面積エラー＞
{!get_CheckFieldsMaster.AreaUpperLimitMessage__c}
規定の内容を確認し、修正をしてください。</text>
    </textTemplates>
    <textTemplates>
        <name>text_ErrorMessageFloorPlan</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>＜間取エラー＞
{!get_CheckFieldsMaster.FloorPlanRegulationMessage__c}
規定の内容を確認し、修正をしてください。</text>
    </textTemplates>
    <textTemplates>
        <name>text_ErrorMessagePet</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>＜ペットエラー＞
{!get_CheckFieldsMaster.PetMessage__c}
規定の内容を確認し、修正をしてください。</text>
    </textTemplates>
    <textTemplates>
        <name>text_ErrorMessageRent</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>＜家賃エラー＞
{!get_CheckFieldsMaster.UpperLimitRentMessage__c}
規定の内容を確認し、修正をしてください。</text>
    </textTemplates>
    <textTemplates>
        <name>text_ErrorMessageTypeTerms</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>＜タイプエラー＞
{!get_CheckFieldsMaster.TypeTermsMessage__c}
規定の内容を確認し、修正をしてください。</text>
    </textTemplates>
    <variables>
        <name>RecordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>var_AlertMessage</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>var_DistrictMasterId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>var_ErrorMessage</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>var_RelocationShapeMasterId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>var_TitleMasterId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
